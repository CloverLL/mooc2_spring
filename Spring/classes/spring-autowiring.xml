<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd" 

        default-autowire="constructor" >
        
        <!-- 手动装配 需要配置传入属性的值 以xml property的形式为service的属性赋值
        <bean id="autoWiringService" class="com.imooc.autowiring.AutoWiringService" >
        	<property name="autoWiringDAO" ref="autoWiringDAO"></property>
        </bean>
        <bean id="autoWiringDAO" class="com.imooc.autowiring.AutoWiringDAO" ></bean>
        -->
        
        
        <!-- 自动装配 default-autowire="byName" service需要传值的set属性值的名称 set"AutoWiringDAO" 必须和bean id "autoWiringDAO"相同
        	1、service 声明 Dao对象类型属性 名称需与bean id相同 
        	2、添加属性的set方法
        	3、执行service方法 
        	5、set 和Dao的bean id 名称相同的 Dao对象 给service
        	4、service获得Dao对象的方法
        	6、Dao返回数据给service
        <bean id="autoWiringService" class="com.imooc.autowiring.AutoWiringService" />
        <bean id="autoWiringDAO" class="com.imooc.autowiring.AutoWiringDAO" ></bean>
        -->
        
        
        
        <!-- 自动装配  default-autowire="byType" 
        	1、过程和byName相同
        	2、byType不需要id 不需要名称对应 但是service声明的对象需要和bean需要传入的值得类型相同 
        <bean id="autoWiringService" class="com.imooc.autowiring.AutoWiringService" />
        <bean class="com.imooc.autowiring.AutoWiringDAO" ></bean>
        -->
        
        
        <!-- 自动装配  default-autowire="constructor" 
        	1、也是查询类型
        <bean id="autoWiringService" class="com.imooc.autowiring.AutoWiringService" />
        <bean class="com.imooc.autowiring.AutoWiringDAO" ></bean>
		-->
		
		<!-- 总结
			1、默认自动装配为：no 为bean赋值需要使用 property
			2、byName：需要传入值得bean id 与类属性的名称相同 需要set方法
			3、byType：不需要名称相同 但是要传值得bean值得类型 需要和声明set的对象是一个类型 需要set方法
			4、constructor：不需要名称相同 需要类型相同 不需要set方法 但是需要 构造方法
			5、无对应项就等于没有传值 
		 -->
 </beans>
